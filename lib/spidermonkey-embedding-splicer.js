import{log as e,error as t}from"../console.js";const r=WebAssembly.instantiate,n=new TextDecoder,o=new TextEncoder;let i=0;function s(e,t,r){if("string"!=typeof e)throw new TypeError("expected a string");if(0===e.length)return i=0,1;let n=0,s=0,a=0;for(;e.length>0;){s=t(s,n,1,n+e.length),n+=e.length;const{read:i,written:c}=o.encodeInto(e,new Uint8Array(r.buffer,s+a,n-a));a+=c,e=e.slice(i)}return n>a&&(s=t(s,n,1,a)),i=a,s}let a=new DataView(new ArrayBuffer);const c=e=>a.buffer===e.buffer?a:a=new DataView(e.buffer);function A(){throw new TypeError("invalid variant discriminant for bool")}class ComponentError extends Error{constructor(e){const t="string"!=typeof e;super(t?e+""+" (see error.payload)":e),Object.defineProperty(this,"payload",{value:e,enumerable:t})}}const f="undefined"!=typeof process&&process.versions&&process.versions.node;let l;const b=e=>WebAssembly.compile("undefined"!=typeof Buffer?Buffer.from(e,"base64"):Uint8Array.from(atob(e),(e=>e.charCodeAt(0))));let d,p,g,w,u,m;function y(t,r){const o=t,i=r,s=n.decode(new Uint8Array(g.buffer,o,i));e(s)}function I(e,r){const o=e,i=r,s=n.decode(new Uint8Array(g.buffer,o,i));t(s)}const B={spliceBindings(e,t,r,o){const a=e;let f,l,b;if(null==a)f=0,l=0,b=0;else{f=1,l=s(a,u,g),b=i}const d=t,w=d.byteLength,y=u(0,0,1,1*w),I=new Uint8Array(d.buffer||d,d.byteOffset,1*w);new Uint8Array(g.buffer,y,1*w).set(I);const B=s(r,u,g),h=i,U=o;let v,E,C;if(null==U)v=0,E=0,C=0;else{v=1,E=s(U,u,g),C=i}const k=p["exports#splice-bindings"](f,l,b,y,w,B,h,v,E,C);let x;switch(c(g).getUint8(k+0,!0)){case 0:{const e=c(g).getInt32(k+4,!0),t=c(g).getInt32(k+8,!0),r=new Uint8Array(g.buffer.slice(e,e+1*t)),o=c(g).getInt32(k+12,!0),i=c(g).getInt32(k+16,!0),s=n.decode(new Uint8Array(g.buffer,o,i)),a=c(g).getInt32(k+24,!0),f=c(g).getInt32(k+20,!0),l=[];for(let e=0;e<a;e++){const t=f+28*e,r=c(g).getInt32(t+0,!0),o=c(g).getInt32(t+4,!0),i=n.decode(new Uint8Array(g.buffer,r,o)),s=c(g).getInt32(t+12,!0),a=c(g).getInt32(t+8,!0),b=[];for(let e=0;e<s;e++){const t=a+1*e;let r;switch(c(g).getUint8(t+0,!0)){case 0:r="i32";break;case 1:r="i64";break;case 2:r="f32";break;case 3:r="f64";break;default:throw new TypeError("invalid discriminant specified for CoreTy")}b.push(r)}let d;switch(c(g).getUint8(t+16,!0)){case 0:d=null;break;case 1:{let e;switch(c(g).getUint8(t+17,!0)){case 0:e="i32";break;case 1:e="i64";break;case 2:e="f32";break;case 3:e="f64";break;default:throw new TypeError("invalid discriminant specified for CoreTy")}d=e;break}default:throw new TypeError("invalid variant discriminant for option")}const p=c(g).getUint8(t+18,!0),w=c(g).getUint8(t+24,!0);l.push({name:i,args:b,ret:d,retptr:0!=p&&(1==p||A()),retsize:c(g).getInt32(t+20,!0)>>>0,paramptr:0!=w&&(1==w||A())})}const b=c(g).getInt32(k+32,!0),d=c(g).getInt32(k+28,!0),p=[];for(let e=0;e<b;e++){const t=d+16*e,r=c(g).getInt32(t+0,!0),o=c(g).getInt32(t+4,!0),i=n.decode(new Uint8Array(g.buffer,r,o)),s=c(g).getInt32(t+8,!0),a=c(g).getInt32(t+12,!0),A=n.decode(new Uint8Array(g.buffer,s,a));p.push([i,A])}const w=c(g).getInt32(k+40,!0),u=c(g).getInt32(k+36,!0),m=[];for(let e=0;e<w;e++){const t=u+16*e,r=c(g).getInt32(t+0,!0),o=c(g).getInt32(t+4,!0),i=n.decode(new Uint8Array(g.buffer,r,o)),s=c(g).getInt32(t+12,!0),a=c(g).getInt32(t+8,!0),A=[];for(let e=0;e<s;e++){const t=a+8*e,r=c(g).getInt32(t+0,!0),o=c(g).getInt32(t+4,!0),i=n.decode(new Uint8Array(g.buffer,r,o));A.push(i)}m.push([i,A])}x={tag:"ok",val:{wasm:r,jsBindings:s,exportCoreFns:l,importWrappers:p,imports:m}};break}case 1:{const e=c(g).getInt32(k+4,!0),t=c(g).getInt32(k+8,!0);x={tag:"err",val:n.decode(new Uint8Array(g.buffer,e,t))};break}default:throw new TypeError("invalid variant discriminant for expected")}if(m(k),"err"===x.tag)throw new ComponentError(x.val);return x.val}};export{B as exports};const h=(async()=>{const e=async function(e){return f?(l=l||await import("fs/promises"),WebAssembly.compile(await l.readFile(e))):fetch(e).then(WebAssembly.compileStreaming)}(new URL("./spidermonkey-embedding-splicer.core.wasm",import.meta.url)),t=b("AGFzbQEAAAABBgFgAn9/AAMDAgAABAUBcAECAgcUAwEwAAABMQABCCRpbXBvcnRzAQAKGQILACAAIAFBABEAAAsLACAAIAFBAREAAAsALQlwcm9kdWNlcnMBDHByb2Nlc3NlZC1ieQENd2l0LWNvbXBvbmVudAUwLjguMQBLBG5hbWUAExJ3aXQtY29tcG9uZW50OnNoaW0BLwIAFGluZGlyZWN0LWNvbnNvbGUtbG9nARZpbmRpcmVjdC1jb25zb2xlLWVycm9y"),n=b("AGFzbQEAAAABBgFgAn9/AAIaAwABMAAAAAExAAAACCRpbXBvcnRzAXABAgIJCAEAQQALAgABAC0JcHJvZHVjZXJzAQxwcm9jZXNzZWQtYnkBDXdpdC1jb21wb25lbnQFMC44LjEAHARuYW1lABUUd2l0LWNvbXBvbmVudDpmaXh1cHM=");Promise.all([e,t,n]).catch((()=>{})),({exports:d}=await r(await t)),({exports:p}=await r(await e,{console:{error:d[1],log:d[0]}})),g=p.memory,({exports:w}=await r(await n,{"":{$imports:d.$imports,0:y,1:I}})),u=p.cabi_realloc,m=p["cabi_post_exports#splice-bindings"]})();await h;