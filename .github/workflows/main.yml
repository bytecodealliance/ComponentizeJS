name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
defaults:
  run:
    shell: bash

# Cancel any in-flight jobs for the same PR/branch so there's only one active
# at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install Rust
      run: |
        rustup update stable --no-self-update
        rustup default 1.68.2
        rustup target add wasm32-unknown-unknown
        rustup target add wasm32-wasi

    - uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Cache Rust dependencies
      uses: actions/cache@v3
      id: rust-build
      with:
        path: target
        key: engine-build-${{ hashFiles('Cargo.lock', 'crates/spidermonkey-embedding-splicer/src/**/*.rs') }}

    - name: Install NPM packages
      run: npm install

    - name: Cache StarlingMonkey
      uses: actions/cache@v3
      id: starlingmonkey-build
      with:
        path: build-release
        key: engine-build-${{ hashFiles('.git/modules/StarlingMonkey/FETCH_HEAD') }}

    - name: Build
      run: npm run build

    - name: Test
      run: npm run test

    - name: Cache Example build
      uses: actions/cache@v3
      with:
        path: example/target
        key: engine-cargo-${{ hashFiles('example/src/main.rs', 'example/Cargo.lock', 'example/hello.wit') }}

    - name: Test Example
      run: |
        rustup default stable
        rustup target add wasm32-unknown-unknown
        cd example && npm run build && ./test.sh

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Rust
      run: rustup update stable && rustup default stable && rustup component add rustfmt
    - name: Format source code
      run: cargo fmt -- --check
