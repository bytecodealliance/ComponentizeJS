name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
defaults:
  run:
    shell: bash

# Cancel any in-flight jobs for the same PR/branch so there's only one active
# at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: |
          rustup update stable
          rustup default stable
          rustup component add rustfmt
      - name: Format source code
        run: cargo fmt -- --check

  #########
  # Build #
  #########

  build-splicer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Splicer build
        uses: actions/cache@v4
        id: splicer-build
        with:
          key: splicer-${{ hashFiles('Cargo.lock', 'crates/spidermonkey-embedding-splicer/src/**/*.rs') }}
          path: |
            lib
            target

      - name: Install Rust Toolchain
        if: steps.splicer-build.outputs.cache-hit != 'true'
        run: |
          rustup toolchain install 1.80.0
          rustup target add wasm32-wasip1 --toolchain 1.80.0
          rustup target add wasm32-wasip1

      - uses: actions/setup-node@v4
        if: steps.splicer-build.outputs.cache-hit != 'true'
        with:
          node-version: '23.10.0'

      - name: Install NPM packages
        if: steps.splicer-build.outputs.cache-hit != 'true'
        run: npm install

      - name: Build splicer
        if: steps.splicer-build.outputs.cache-hit != 'true'
        run: make lib/spidermonkey-embedding-splicer.js

  build:
    runs-on: ubuntu-latest
    needs:
      - build-splicer
    strategy:
      fail-fast: false
      matrix:
        build-type:
          - 'release'
          - 'debug'
          - 'weval'
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Get StarlingMonkey Commit
        id: starlingmonkey-commit
        run: echo "STARLINGMONKEY_HASH=$(git submodule status | head -c9 | tail -c8)" >> "$GITHUB_OUTPUT"
      
      - uses: actions/cache@v4
        id: starlingmonkey-build
        with:
          key: starlingmonkey-${{matrix.build-type}}-${{ steps.starlingmonkey-commit.outputs.STARLINGMONKEY_HASH }}
          path: lib

      - name: Install Rust Toolchain
        if: steps.starlingmonkey-build.outputs.cache-hit != 'true'
        run: |
          rustup toolchain install 1.80.0
          rustup target add wasm32-wasip1 --toolchain 1.80.0
          rustup target add wasm32-wasip1

      - name: Install wasm-tools
        if: steps.starlingmonkey-build.outputs.cache-hit != 'true'
        run: cargo install wasm-tools

      - name: Restore Embedding Splicer from cache
        uses: actions/cache/restore@v4
        id: splicer-build
        with:
          key: splicer-${{ hashFiles('Cargo.lock', 'crates/spidermonkey-embedding-splicer/src/**/*.rs') }}
          path: |
            lib
            target

      - uses: actions/setup-node@v4
        if: steps.starlingmonkey-build.outputs.cache-hit != 'true'
        with:
          node-version: '23.10.0'

      - name: Install NPM packages
        if: steps.starlingmonkey-build.outputs.cache-hit != 'true'
        run: npm install

      - name: Build ComponentizeJS
        if: steps.starlingmonkey-build.outputs.cache-hit != 'true'
        run: |
          npm run clean
          npm run build:${{matrix.build-type}}

  ########
  # Test #
  ########

  test:
    runs-on: ${{ matrix.os }}
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        node-version:
          - '23.10.0'
          # - latest reenable when https://github.com/nodejs/node/issues/57172 is fixed
        os:
          - ubuntu-latest
          - windows-latest
        build-type:
          - 'release'
          - 'debug'
          - 'weval'
    steps:
      - uses: actions/checkout@v4

      - name: Get StarlingMonkey Commit
        id: starlingmonkey-commit
        run: echo "STARLINGMONKEY_HASH=$(git submodule status | head -c9 | tail -c8)" >> "$GITHUB_OUTPUT"

      - name: Restore StarlingMonkey build from cache
        uses: actions/cache/restore@v4
        id: restore-starlingmonkey-jit-build
        with:
          key: starlingmonkey-${{matrix.build-type}}-${{ steps.starlingmonkey-commit.outputs.STARLINGMONKEY_HASH }}
          path: lib

      - uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.node-version}}

      - name: Install NPM packages
        run: npm install

      - name: Test
        run: npm run test:${{matrix.build-type}}

  test-example:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v4

      - name: Get StarlingMonkey Commit
        id: starlingmonkey-commit
        run: echo "STARLINGMONKEY_HASH=$(git submodule status | head -c9 | tail -c8)" >> "$GITHUB_OUTPUT"

      - name: Restore StarlingMonkey build from cache
        uses: actions/cache/restore@v4
        id: restore-starlingmonkey-jit-build
        with:
          key: starlingmonkey-release-${{ steps.starlingmonkey-commit.outputs.STARLINGMONKEY_HASH }}
          path: lib

      - uses: actions/setup-node@v4
        with:
          node-version: '23.10.0'

      - name: Install NPM packages
        run: npm install

      - name: Cache Example build
        uses: actions/cache@v4
        with:
          path: examples/target
          key: example-jit-cargo-${{ hashFiles('examples/src/main.rs', 'examples/Cargo.lock', 'examples/hello.wit') }}

      - name: Test Example
        run: |
          cd examples/hello-world
          ./test.sh
